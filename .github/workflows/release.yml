name: Release Application

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-2022, ubuntu-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Windows
      if: matrix.os == 'windows-2022'
      run: npm run dist-win
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Linux
      if: matrix.os == 'ubuntu-latest'
      run: npm run dist-linux
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-${{ matrix.os }}
        path: dist/*

  create-release:
    needs: release
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
      (github.event_name == 'workflow_dispatch')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set release version
      run: echo "VERSION=${{ github.event.inputs.version || github.ref_name }}" >> $GITHUB_ENV

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: List built files
      run: |
        echo "Files built by electron-builder:"
        find ./artifacts -type f \( -name "*.exe" -o -name "*.AppImage" -o -name "*.yml" \) | sort

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        name: "🏛️ Generator Documente Minoritati ${{ env.VERSION }}"
        body: |
          ## 🎯 Generator Documente Minoritati ${{ env.VERSION }}
          
          📋 Desktop application for generating minority documents
          
          ### 📦 Downloads
          
          **For regular users:**
          - **Windows**: Download the `.exe` file (Setup installer)
          - **Linux**: Download the `.AppImage` file
          
          ### ✨ Features
          - Generate decision documents
          - Generate minority reports  
          - Advanced custom templates with field configuration
          - Document preview functionality
          - Professional document formatting
          
          ---
          🛠️ Built with Electron and Node.js
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload release assets
      run: |
        # Find and upload only installer files and update metadata
        find ./artifacts -type f \( -name "*-Setup-*.exe" -o -name "*-*.AppImage" -o -name "latest*.yml" \) -exec gh release upload "${VERSION}" {} --clobber \;
